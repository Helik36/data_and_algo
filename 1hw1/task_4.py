"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""
# Второй вариант будет лучше, т.к в ней не используется цикл

def entrance (users, u_name, u_pass): # Общая сложность O(n)
    for key, value in users.items():
        if key == u_name:
            if value['pass'] == u_pass and value['activ']:
                return 'Вход выполнен'
            elif value['pass'] == u_pass and not value['activ']:
                return 'Нужно пройти активацию'
            elif value['pass'] != u_pass:
                return 'Пароль неверный'
    return 'пользователя не существует'

def entrance_v2(users, u_name, u_pass):   # общая сложность O(1)
    if users.get(u_name):
        if users[u_name]['pass'] == u_pass and users[u_name]['activ']:
            return 'Вход выполнен'
        elif users[u_name]['pass'] == u_pass and not users[u_name]['activ']:
            return 'Нужно пройти активацию'
        elif users[u_name]['pass'] != u_pass:
            return "Пароль не верный"
    else:
        return 'пользователя не существует'

users = {'user1': {'pass': '11111', 'activ': True},
         'user2': {'pass': '22223', 'activ': False},
         'user3': {'pass': '33334', 'activ': True},
         'user4': {'pass': '44444', 'activ': False}
            }

print(entrance(users, 'user1', '11111'))
print(entrance_v2(users, 'user5', '1123а'))