"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
def task2(vars):
    if len(vars) == 0:
        return print(f'чётные - {even}, всего их - {len(even)}. Нечётные - {odd}, всего их - {len(odd)}')
    elif int(vars[0]) % 2 == 0:
        # print(vars[0])
        even.append(vars[0])
        vars.remove(vars[0])
        task2(vars)
    elif int(vars[0]) % 2 != 0:
        # print(vars[0])
        odd.append(vars[0])
        vars.remove(vars[0])
        task2(vars)

vars = list(input("Введите число: "))
even = []
odd = []

print(task2(vars))